apiVersion: template.openshift.io/v1
kind: Template
labels:
  template: survey-demo
message: |-
   ____  _     ____  _     ________  _   ____  _____ _      ____ 
  / ___\/ \ /\/  __\/ \ |\/  __/\  \//  /  _ \/  __// \__/|/  _ \
  |    \| | |||  \/|| | //|  \   \  /   | | \||  \  | |\/||| / \|
  \___ || \_/||    /| \// |  /_  / /    | |_/||  /_ | |  ||| \_/|
  \____/\____/\_/\_\\__/  \____\/_/     \____/\____\\_/  \|\____/                                                                
  This will create the Survey Demo Application with a MySQL Database
  In order to use, just type: $ oc new-app survey-demo.yaml

  A database will be created to storage all the data needed. 
  Connection URL (in golang): ${MYSQL_USER}:${MYSQL_PASSWORD}@tcp(${DATABASE_SERVICE_NAME}:3306)/${MYSQL_DATABASE}?charset=utf8mb4
           Database Username: ${MYSQL_USER}
           Database Password: ${MYSQL_PASSWORD}
               Database Name: ${MYSQL_DATABASE}
               Database Host: ${DATABASE_SERVICE_NAME}
               Database Port: 3306
metadata:
  annotations:
    description: |-
      MySQL database service, without persistent storage. For more information about using this template, including OpenShift considerations, see https://github.com/sclorg/mysql-container/blob/master/8.0/root/usr/share/container-scripts/mysql/README.md.

      WARNING: Any data stored will be lost upon pod destruction. Only use this template for testing
    iconClass: icon-mysql-database
    openshift.io/display-name: Survey Demo with MySQL (Ephemeral)
    openshift.io/documentation-url: https://docs.okd.io/latest/using_images/db_images/mysql.html
    openshift.io/long-description:
      This template provides a standalone MySQL server
      with a database created.  The database is not stored on persistent storage,
      so any restart of the service will result in all data being lost.  The database
      name, username, and password are chosen via parameters when provisioning this
      service.
    openshift.io/provider-display-name: Red Hat, Inc.
    openshift.io/support-url: https://access.redhat.com
    samples.operator.openshift.io/version: 4.4.8
    tags: survey,demo,database,mysql
  labels:
    samples.operator.openshift.io/managed: "true"
  name: survey-demo
objects:
  - apiVersion: apps/v1
    kind: Deployment
    metadata:
      name: survey-demo
    spec:
      replicas: 1
      selector:
        matchLabels:
          app: survey-demo
      template:
        metadata:
          annotations:
            readiness.status.sidecar.istio.io/applicationPorts: ""
          labels:
            app: survey-demo
        spec:
          containers:
            - name: survey-demo
              image: quay.io/maltron/survey-demo:latest
              imagePullPolicy: IfNotPresent
              ports:
                - containerPort: 8080
              securityContext:
                privileged: false
              env:
                - name: SURVEY_PORT
                  value: "8080"
                - name: SURVEY_DATABASE_USER
                  value: ${MYSQL_USER}
                - name: SURVEY_DATABASE_PASSWORD
                  value: ${MYSQL_PASSWORD}
                - name: SURVEY_DATABASE_HOST
                  value: ${DATABASE_SERVICE_NAME}
                - name: SURVEY_DATABASE_PORT
                  value: "3306"
                - name: SURVEY_DATABASE
                  value: ${MYSQL_DATABASE}
  - apiVersion: v1
    kind: Service
    metadata:
      name: survey-demo
      labels:
        app: survey-demo
    spec:
      ports:
        - name: http
          port: 8080
      selector:
        app: survey-demo
  - apiVersion: route.openshift.io/v1
    kind: Route
    metadata:
      labels:
        app: survey-demo
      name: survey-demo
    spec:
      to:
        kind: Service
        name: survey-demo
  - apiVersion: v1
    kind: Secret
    metadata:
      annotations:
        template.openshift.io/expose-database_name: "{.data['database-name']}"
        template.openshift.io/expose-password: "{.data['database-password']}"
        template.openshift.io/expose-root_password: "{.data['database-root-password']}"
        template.openshift.io/expose-username: "{.data['database-user']}"
      name: ${DATABASE_SERVICE_NAME}
    stringData:
      database-name: ${MYSQL_DATABASE}
      database-password: ${MYSQL_PASSWORD}
      database-root-password: ${MYSQL_ROOT_PASSWORD}
      database-user: ${MYSQL_USER}
  - apiVersion: v1
    kind: Service
    metadata:
      annotations:
        template.openshift.io/expose-uri: mysql://{.spec.clusterIP}:{.spec.ports[?(.name=="mysql")].port}
      name: ${DATABASE_SERVICE_NAME}
    spec:
      ports:
        - name: mysql
          nodePort: 0
          port: 3306
          protocol: TCP
          targetPort: 3306
      selector:
        name: ${DATABASE_SERVICE_NAME}
      sessionAffinity: None
      type: ClusterIP
    status:
      loadBalancer: {}
  - apiVersion: v1
    kind: DeploymentConfig
    metadata:
      annotations:
        template.alpha.openshift.io/wait-for-ready: "true"
      name: ${DATABASE_SERVICE_NAME}
    spec:
      replicas: 1
      selector:
        name: ${DATABASE_SERVICE_NAME}
      strategy:
        type: Recreate
      template:
        metadata:
          labels:
            name: ${DATABASE_SERVICE_NAME}
        spec:
          containers:
            - capabilities: {}
              env:
                - name: MYSQL_USER
                  valueFrom:
                    secretKeyRef:
                      key: database-user
                      name: ${DATABASE_SERVICE_NAME}
                - name: MYSQL_PASSWORD
                  valueFrom:
                    secretKeyRef:
                      key: database-password
                      name: ${DATABASE_SERVICE_NAME}
                - name: MYSQL_ROOT_PASSWORD
                  valueFrom:
                    secretKeyRef:
                      key: database-root-password
                      name: ${DATABASE_SERVICE_NAME}
                - name: MYSQL_DATABASE
                  valueFrom:
                    secretKeyRef:
                      key: database-name
                      name: ${DATABASE_SERVICE_NAME}
              image: " "
              imagePullPolicy: IfNotPresent
              livenessProbe:
                initialDelaySeconds: 30
                tcpSocket:
                  port: 3306
                timeoutSeconds: 1
              name: mysql
              ports:
                - containerPort: 3306
                  protocol: TCP
              readinessProbe:
                exec:
                  command:
                    - /bin/sh
                    - -i
                    - -c
                    - MYSQL_PWD="$MYSQL_PASSWORD" mysql -h 127.0.0.1 -u $MYSQL_USER -D $MYSQL_DATABASE
                      -e 'SELECT 1'
                initialDelaySeconds: 5
                timeoutSeconds: 1
              resources:
                limits:
                  memory: ${MEMORY_LIMIT}
              securityContext:
                capabilities: {}
                privileged: false
              terminationMessagePath: /dev/termination-log
              volumeMounts:
                - mountPath: /var/lib/mysql/data
                  name: ${DATABASE_SERVICE_NAME}-data
          dnsPolicy: ClusterFirst
          restartPolicy: Always
          volumes:
            - emptyDir:
                medium: ""
              name: ${DATABASE_SERVICE_NAME}-data
      triggers:
        - imageChangeParams:
            automatic: true
            containerNames:
              - mysql
            from:
              kind: ImageStreamTag
              name: mysql:${MYSQL_VERSION}
              namespace: ${NAMESPACE}
            lastTriggeredImage: ""
          type: ImageChange
        - type: ConfigChange
    status: {}
parameters:
  - description: Maximum amount of memory the container can use.
    displayName: Memory Limit
    name: MEMORY_LIMIT
    required: true
    value: 512Mi
  - description: The OpenShift Namespace where the ImageStream resides.
    displayName: Namespace
    name: NAMESPACE
    value: openshift
  - description: The name of the OpenShift Service exposed for the database.
    displayName: Database Service Name
    name: DATABASE_SERVICE_NAME
    required: true
    value: survey-mysql
  - description: Username for MySQL user that will be used for accessing the database.
    displayName: MySQL Connection Username
    from: user[A-Z0-9]{3}
    generate: expression
    name: MYSQL_USER
    required: true
  - description: Password for the MySQL connection user.
    displayName: MySQL Connection Password
    from: "[a-zA-Z0-9]{16}"
    generate: expression
    name: MYSQL_PASSWORD
    required: true
  - description: Password for the MySQL root user.
    displayName: MySQL root user Password
    from: "[a-zA-Z0-9]{16}"
    generate: expression
    name: MYSQL_ROOT_PASSWORD
    required: true
  - description: Name of the MySQL database accessed.
    displayName: MySQL Database Name
    name: MYSQL_DATABASE
    required: true
    value: survey
  - description: Version of MySQL image to be used (8.0, or latest).
    displayName: Version of MySQL Image
    name: MYSQL_VERSION
    required: true
    value: "8.0"
